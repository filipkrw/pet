(()=>{"use strict";var e={496:e=>{e.exports=require("vscode")},37:e=>{e.exports=require("os")},17:e=>{e.exports=require("path")}},t={};function o(a){var i=t[a];if(void 0!==i)return i.exports;var s=t[a]={exports:{}};return e[a](s,s.exports,o),s.exports}var a={};(()=>{var e=a;Object.defineProperty(e,"__esModule",{value:!0}),e.deactivate=e.activate=void 0;const t=o(496),i=o(37),s=o(17);e.activate=function(e){let o=t.commands.registerCommand("pet.createSnippet",(async()=>{let e=t.workspace.getConfiguration().get("pet");if(!e.basePath){const o=await t.window.showInputBox({prompt:"Specify snippets base path",placeHolder:"Base Path",value:s.join(i.homedir(),"snippets")});if(!o)return void t.window.showErrorMessage("You need to specify base path to create new snippets.");await t.workspace.getConfiguration().update("pet.basePath",s.normalize(o),!0),e=t.workspace.getConfiguration().get("pet")}const o=await t.window.showInputBox({placeHolder:"Snippet Path"});if(o){const a=s.join(e.basePath,o);try{const e=await t.workspace.openTextDocument(t.Uri.file(a).with({scheme:"untitled"}));await t.window.showTextDocument(e)}catch(e){t.window.showErrorMessage("Snippet on this path already exists.")}}}));e.subscriptions.push(o)},e.deactivate=function(){}})(),module.exports=a})();